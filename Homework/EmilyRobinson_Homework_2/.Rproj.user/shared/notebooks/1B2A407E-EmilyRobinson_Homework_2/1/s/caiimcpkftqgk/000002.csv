"0","newtonR <- function(f, xInit, maxIt = 20, relConvCrit = 1.e-10, ...){"
"0","  p = length(xInit)"
"0","  results = matrix(NA, maxIt, p+2)"
"0","  colnames(results) = c(""value"", paste(""x"", 1:p, sep = """"), ""Conv"")"
"0","  "
"0","  xCurrent = xInit"
"0","  for(t in 1:maxIt){"
"0","    evalF = f(xCurrent, der = 2, ...)"
"0","    results[t, ""value""] = evalF$value"
"0","    results[t, 1+(1:p)] = xCurrent"
"0","    xNext = xCurrent - solve(evalF$der2, evalF$der1)"
"0","    Conv = sqrt(crossprod(xNext - xCurrent))/(sqrt(crossprod(xCurrent))+relConvCrit)"
"0","    results[t, ""Conv""] = Conv"
"0","    if(Conv < relConvCrit) break"
"0","    xCurrent = xNext"
"0","  }"
"0","  "
"0","  evalFinal <- f(xNext, der = 2, ...)"
"0","  "
"0","  return(list(x = xNext, se = sqrt(diag(-solve(evalFinal$der2))), value = evalFinal$value, convergence = (Conv < relConvCrit), results = results[1:t,]))"
"0","}"
